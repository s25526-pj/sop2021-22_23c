2022-03-18

Moj kochany pamiętniczku na pierwszych zajęciach instalowaliśmy system operacyjny debian. 
Zaczęliśmy od zapoznania się z narzędziem do wirtualizacji Oracle VM VirtualBox. 
Następnie przystąpiliśmy do instalacji systemu operacyjnego. 
Dowiedziałem się rzeczy o których wcześniej nie miałem pojęcia a mianowicie jak wiele informacji kryje się w 
instalacji systemu operacyjnego, oraz jakie funkcje oddziałują na system operacyjny i jego prace, 
jedną z takich rzeczy było ustawianie partycjonowania dysku, w jaki sposób ma to wpływ na zapis na dysku twardym. 
Pamiętam że rozmawialiśmy o rozłożeniu danych na dysku że lepiej mieć dane na jednym i na drugim dysku takie 
same a nie na obu rozłożone. 
Zrozumiałem, że dla spokoju ducha lepiej zainstalować system raz i porządnie niż bezmyślnie przeklikiwać kolejne 
okna instalatora. 
Wiem, że jeszcze daleka droga przede mną jeśli chodzi o instalacje systemów operacyjnych.

2022-03-29

Na ostatnich zajeciach poznaliśmy jak tworzy sie skrypty w bashu, pierwszym zadaniem było wyświeltenie czegos na ekranie z pliku, 
trzeba pamietac o shebangu (#!/bin/bash), oraz o zostawieniu wolnej linii na końcu pliku. Dowiedzieliśmy się cennych informacji o zmiennych systemowych
m.in. $PWD która zawiera ścieżke katalogu w którym aktualnie się znajdujemy. Rozmawialiśmy o tym w jaki sposób działa (dziedziczenie) w bashu, czyli 
jeśli zainicjujemy zmienna i otworzymy nowego basha to możemy się odwołać do zmiennej zainicjowanej we wcześniejszym bashu. Nigdy nie miałęm styczności z 
programowaniem skryptowym w bashu, zauważyłem duze podobieństwo jeśli chodzi o programowanie w innych technologiach. 

2022-04-11

Kochany Pamietniczku na ostatnich zajeciach zagłebilismy sie w temacie skladni basha, a mianowicie w jaki sposób działają if'y, pętle, konstrukcja warunkowa switch,
zauważyłem że czasem lepiej jest użyć switch niż tworzyć kilkanaście zagłębień else if, moim zdaniem poprawia to czytelność kodu. Nauczylismy się także w jaki posób 
tworzy się [definiuje] funkcje i do czego one służą. Najtrudniejsze jednak przede mną zadanie domowe wiem że jeszcze troche przede mną jeśli chodzi o regexa :/ 


2022-04-30

Na ostanich zajeciach dowiedzielismy sie o pisaniu progamów w c, ciekawym doswiadczeniem było przedstawienie przez prowadzacego kodu ( nie pamietam juz co robił :( ) w którym nie
nie wystapiła żadna instrukcja warunkowa. Najcieższym podczas robienia zadań okazał się regex, tak jak podejrzewałem. Jedna z nowości która się dowiedziałem była kompilacja plików gcc dla programów 
napisanych w jezyku c oraz g++ dla programów napisanych w języku c++. Kolejną nowością było przykazywanie argumentów do programu argc oraz argv gdzie argv[0] to nazwa programu a argc to liczba argumentów;
Nie zrobiłem jeszcze wszystkich zadań, ale powoli i systematycznie staram się je robić.

2022-05-14

Na ostanich zajeciach dowiedzielismy sie na temat procesów, tak jak powiedział nam prowadzacy to nie jest prosty temat i trzeba go przekodzic, nigdy nie słyszałem o czymś takim wcześniej, 
o słowie fork już gdzieś słyszałem ale nie wiem gdzie :/, jednak skojarzyłem to sobie z funkcja rekurencyjną [uważam że działanie jest podobne], z która miałem troche do czynienia. Podczas kodowania zadan 
najtrudniejszy okazało się zadanie nr 4, stwierdziłem wiec ze zrobie zadanie domowe które wydawało mi się łatwiejsze, chwile poszukałem, chwile pomyślałem i zrobiłem zadanie domowe które otworzyło mi oczy 
w jaki sposób zrobic zadanie nr 4, długo sie nie zastanawiałem :D. 


2022-06-10

Na ostatnim zjeździe dowiedzielismy sie w jaki sposób działaja sygnały oraz sockety, jeśli chodzi o sygnały to mamy 
dwie funkcje signal oraz sigaction, signal to funkcja która pozwala nam zdefiniować co ma się zadziac na dany sygnał
SIGINT - ctrl+c - 2
SIGKILL - 9 
Jesli chodzi o sygnały to signal działa w taki sposób że jeśli otrzymujemy sygnał to akcja sie wykonuje i jesli dostaniemy
kolejny to akcja sie zatrzyma i wykona obsługe innego sygnału po czym wróci spowrotem od akcji pierwszego. Jesli chodzi
o sigaction to to co zrozumiałem to definiujemy handler tak samo jak signal tylko żę jesli przyjdzie inny sygnał po pierwszym 
to program nie skoczy do tego nowego tylko skończy pierwszy. 

Co do socketów to pamietam ze sam socket zawiera w sobie port i adress ip i jest od zdefiniowany i dla serwera i dla clienta,
TCP oraz UDP to TCP jest bezpieczniejszy na straty pamieci, a UDP tak jak przykłąd ze stadionem napełni ciagiem tyle ile wejdzie, 
metody jakie były to socket() która tworzy socket, htons(), read() która czytała dane i zapisywała do bufora, niestety nie udało mi się
przetestować działania i oczytać sie bardziej na temat socketów, ponieważ czeka mnie jak i innych kolegów i koleżanek dość sporo kolokwiów. :/ 
Co do zadań to zrobiłem tylko 1 i 2 dla sygnałów, zrobiłem je wraz z pomocą Mateusza Kopczyńskiego (s24261).
